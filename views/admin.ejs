<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>R√°k√≥czi D√ñK | Kezel≈ëfel√ºlet</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
        }
        form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #f9f9f9;
        }
        label {
            display: block;
            margin: 10px 0 5px;
        }
        input, select, button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-top: 5px;
        }
        button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            margin: 10px 0;
        }
        .entry-form {
            display: flex;
            gap: 10px;
            align-items: center;
        }
    </style>
</head>
<body>
    <h1>Di√°k√∂nkorm√°nyzat Kezel≈ë Fel√ºlet</h1> <button onclick="logout()">Kijelentkez√©s</button>
    <button id="lock" class="admin" onclick="lock()">üîí SZAVAZ√ÅS LEZ√ÅR√ÅSA</button>

    <h2 class="staff">√öj fell√©p≈ë hozz√°ad√°sa</h2>
    <form action="/add" method="POST" class="staff">
        <label for="name">Adatok: (Pl.: 001)</label>
        <input type="text" name="name" id="name" required>
        
        <label for="gender">Nem:</label>
        <select name="gender" id="gender" required>
            <option value="">-- V√°lasz nemet --</option>
            <option value="male">F√©rfi</option>
            <option value="female">N≈ë</option>
        </select>
        
        <button type="submit">Regisztr√°l√°s</button>
    </form>

    <h2 class="admin">Fell√©p≈ëk kezel√©se</h2>
    <ul class="admin">
        <% entries.forEach(entry => { %>
            <li>
                <form action="/edit" method="POST" style="display:inline;">
                    <input type="hidden" name="id" value="<%= entry.id %>">
                    <input type="text" name="name" value="<%= entry.name %>" required>
                    <select name="gender" required>
                        <option value="male" <%= entry.gender === 'male' ? 'selected' : '' %>>B√°lkir√°ly</option>
                        <option value="female" <%= entry.gender === 'female' ? 'selected' : '' %>>B√°lkir√°lyn≈ë</option>
                    </select>
                    <button type="submit">Friss√≠t√©s</button>
                </form>
                <form action="/delete" method="POST" style="display:inline;">
                    <input type="hidden" name="id" value="<%= entry.id %>">
                    <button type="submit" style="background-color: red;">T√∂rl√©s</button>
                </form>
            </li>
        <% }) %>
    </ul>
    <hr class="admin">
    <a href="/admin/results" class="admin">
        <button class="admin">Szavazatok megtekint√©se</button>
    </a>
    <script>
        console.log(fetch("/status"))

        let locked = false
        function lock() {
            if (locked == true) {
                document.getElementById("lock").innerHTML = "üîí SZAVAZ√ÅS LEZ√ÅR√ÅSA";
                locked = false
                fetch("/admin/lock", {method: 'POST', body: ""})
            }else{
                document.getElementById("lock").innerHTML = "üîì SZAVAZ√ÅS ENGED√âLYEZ√âSE";
                locked = true
                fetch("/admin/lock", {method: 'POST', body: ""})
            }
        }

        function updateLock() {
            const status = fetch("/status")
            if (status === true) {
                document.getElementById("lock").innerHTML = "üîí SZAVAZ√ÅS LEZ√ÅR√ÅSA";
                console.log("true")
            }else{
                document.getElementById("lock").innerHTML = "üîì SZAVAZ√ÅS ENGED√âLYEZ√âSE";
                console.log("false or error")
            }
        }

        updateLock()
    </script>
    <script>
        let admins;
        let staff;
    
        async function getAuths() {
            const response = await fetch("/api/auths");
            const auths = await response.json();
            console.log(auths);
    
            admins = auths.admins;
            staff = auths.staff;
    
            initAuth(); // Initialize the authentication check only after auths are loaded
        }
    
        function initAuth() {
            console.log(`Admins: ${admins}`);
            console.log(`Staff: ${staff}`);
    
            const levels = ["IPKkjs01xo", "532GKYWFMZ"];
            let adminElements = document.getElementsByClassName("admin");
    
            let adminLevel = window.sessionStorage.getItem("adminlevel");
    
            if (!adminLevel) {
                let prompt1 = prompt("K√©rj√ºk jelentkezzen be!");
                if (admins.includes(prompt1)) {
                    console.log("Creating admin key");
                    window.sessionStorage.setItem("adminlevel", "IPKkjs01xo");
                    console.log("Created admin key");
                } else if (staff.includes(prompt1)) {
                    console.log("Creating staff key");
                    window.sessionStorage.setItem("adminlevel", "532GKYWFMZ");
                    console.log("Created staff key");
                    for (let i = 0; i < adminElements.length; i++) {
                        adminElements[i].style.display = "none";
                    }
                } else {
                    console.log("Nem vagy jogosult a bel√©p√©shez!");
                    alert("Nem vagy jogosult a bel√©p√©shez!");
                    window.location.reload();
                }
            } else if (!levels.includes(adminLevel)) {
                alert("Error: Authentication error! (E405)");
                window.sessionStorage.removeItem("adminlevel");
                window.location.reload();
            }
        }
    
        function logout() {
            window.sessionStorage.removeItem("adminlevel");
            window.location.reload();
        }
    
        // Call getAuths to start the fetch and initialization
        getAuths();
    </script>
    
    
</body>
</html>
